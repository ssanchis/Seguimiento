# dashboard_empresas.py

import streamlit as st
import yfinance as yf
import pandas as pd
import smtplib
import schedule
import time
import threading
from datetime import datetime, timedelta
import streamlit as st
from streamlit_autorefresh import st_autorefresh
from email.mime.text import MIMEText
from zoneinfo import ZoneInfo
from alertas_core import descargar_datos

st.set_page_config(page_title="Dashboard Empresas", layout="wide")
# Refrescar cada 1 hora (3600s)
count = st_autorefresh(interval=3600*1000, key="refresh") 

if count > 0:
    st.cache_data.clear()  

zona_madrid = ZoneInfo("Europe/Madrid")

# Hora actual en Madrid
hora_actual = datetime.now(tz=zona_madrid)
proxima_actualizacion = hora_actual + timedelta(hours=1)

# Mostrar formateado
st.sidebar.markdown(f"游뎸 **칔ltima actualizaci칩n:** {hora_actual.strftime('%Y-%m-%d %H:%M:%S')}")
st.sidebar.markdown(f"游댚 **Pr칩xima actualizaci칩n:** {proxima_actualizacion.strftime('%Y-%m-%d %H:%M:%S')}")

# ------------------------------------------
# CONFIGURACI칍N
PASSWORD = "soyrica"  # Cambia aqu칤 tu contrase침a
TICKERS = ["AAPL", "MSFT","JNJ","REP.MC", "PG", "KO","O","CVX","TTE"]  # Empresas que quieres seguir
ALERTA_UMBRAL = 0.98  # 98% del m치ximo o 102% del m칤nimo
EMAIL_ALERTA = "ssanchiscasco@gmail.com"  # Cambia aqu칤 tu correo para recibir alertas
EMAIL_CONTRASENA = "icxn wgnh dmfx ztim"  # Tu contrase침a de correo
# ------------------------------------------

# Dashboard principal
st.title("游늵 Seguimiento de Empresas")

data_historico, data_reciente = descargar_datos()

NOMBRES_EMPRESAS = {
    "REP.MC": "Repsol - 6~7%",
    "MSFT": "Microsoft Corporation - 0.7%",
    "AAPL": "Apple Inc. - 0.5%",
    "JNJ":"Johnson & Johnson - 3.3%",
    "PG": "Procter & Gamble - 2.5%",
    "KO":"Coca-Cola - 3.1%",
    "O":"Realty Income - 5.7% mensual ",
    "CVX":"Chevron - 4.2%",
    "TTE":"TotalEnergies - 5%"
}

# Una pesta침a por empresa
tabs = st.tabs([f"游끽 {ticker}" for ticker in TICKERS])

for i, ticker in enumerate(TICKERS):
    nombre_empresa = NOMBRES_EMPRESAS.get(ticker, ticker)  # Si no est치, usa el ticker
    with tabs[i]:
        st.title(nombre_empresa)

        hist = data_historico[ticker]
        reciente = data_reciente[ticker]

        # Aseguramos 칤ndices
        if not isinstance(hist.index, pd.DatetimeIndex):
            hist.reset_index(inplace=True)
            hist.set_index('Date', inplace=True)

        if not isinstance(reciente.index, pd.DatetimeIndex):
            reciente.reset_index(inplace=True)
            reciente.set_index('Date', inplace=True)

        # Calculamos fechas de corte
        fecha_max = reciente.index.max()
        fecha_corte_2y = fecha_max - pd.DateOffset(years=2)
        fecha_corte_1y = fecha_max - pd.DateOffset(years=1)

        # Filtramos datos recientes
        reciente_2y = reciente[reciente.index >= fecha_corte_2y]
        reciente_1y = reciente[reciente.index >= fecha_corte_1y]

        # KPIs hist칩ricos
        precio_actual = reciente["Close"].iloc[-1]  # precio actual en reciente
        max_historico = hist["High"].max()
        min_historico = hist["Low"].min()

        # KPIs 2 칰ltimos a침os (usando datos horarios)
        max_2y = reciente_2y["High"].max()
        min_2y = reciente_2y["Low"].min()

        # KPIs 칰ltimo a침o
        max_1y = reciente_1y["High"].max()
        min_1y = reciente_1y["Low"].min()

        # Fila 1: Hist칩rico completo
        st.markdown("### 游닆 Hist칩rico completo")
        col1, col2, col3 = st.columns(3)
        col1.metric("游늳 M치ximo hist칩rico", f"${max_historico:.2f}")
        col2.metric("游늴 M칤nimo hist칩rico", f"${min_historico:.2f}")
        col3.metric("游눳 Precio actual", f"${precio_actual:.2f}")

        # Gr치fico hist칩rico general
        st.markdown("### 游늵 Evoluci칩n hist칩rica del precio")
        st.line_chart(hist["Close"])

        # Fila 2: 칔ltimos 2 a침os
        st.markdown("### 游늰 칔ltimos 2 a침os")
        col4, col5, col6 = st.columns(3)
        col4.metric("游늳 M치ximo 2 a침os", f"${max_2y:.2f}")
        col5.metric("游늴 M칤nimo 2 a침os", f"${min_2y:.2f}")
        col6.metric("游눳 Precio actual", f"${precio_actual:.2f}")

        # Gr치fico 칰ltimos 2 a침os
        st.markdown("### 游늵 Evoluci칩n 칰ltimos 2 a침os del precio (1h)")
        st.line_chart(reciente_2y["Close"])

        # Fila 3: 칔ltimo a침o
        st.markdown("### 游늱 칔ltimo a침o")
        col7, col8, col9 = st.columns(3)
        col7.metric("游늳 M치ximo 1 a침o", f"${max_1y:.2f}")
        col8.metric("游늴 M칤nimo 1 a침o", f"${min_1y:.2f}")
        col9.metric("游눳 Precio actual", f"${precio_actual:.2f}")

        # Gr치fico 칰ltimo a침o
        st.markdown("### 游늵 Evoluci칩n 칰ltimo a침o del precio (1h)")
        st.line_chart(reciente_1y["Close"])
        print(reciente_1y)

